<h1>What is Blackboard?</h1>

<p class="lead">
  Blackboard aims to encourage people new to web development and programming to practise their skills.
</p>
<p>
  Tutorials and lessons are valuable, but the best learning is self-driven and comes from practising what you know. Blackboard aims to provide a collection of projects for beginners, complete with in-depth specifications and advice.
</p>
<p>
  It also aims to teach soft skills, such as interpreting requirements, working to a defined spec, creative problem solving, and development best practises such as Test Driven Development.
</p>

<p>
  Blackboard does not aim to provide tutorials, or basic language skills. There are many books and websites that provide tutorials & courses; Blackboard is designed to cover the gap between those and the skill level needed to work in the industry.
  <br/>
  Each project contains advice & pointers for good solutions, methods, or libraries that may help, but a basic level of understanding & familiarity is assumed. Project groups and projects contain a detailed description of what is expected, and links to other resources.
</p>

<p>
  This website was built by <%= link_to "Sarah Pinder", "http://github.com/rspinder" %> and <%= link_to "Alex Sunderland", "http://github.com/agentantelope"%>. The source code for this website can be found <%= link_to "here on GitHub", "http://github.com/rspinder/blackboard" %>, feel free to take a look, raise issues, or fork & make pull requests.
</p>

<p>
  Both of us have experience teaching others how to work with Ruby & Rails on Rails, and something we heard very often was "Ok, but what do I do now?". People could breeze through tutorials and online courses, then find themselves at a loss for how to actually use all the knowledge they'd gained; or they'd dive straight in to the one great idea that had got them started, overestimate the complexity, and become dissatisfied and stop.
  <br/>
  The best thing we've found to help others - and ourselves! - improve their skills is to start and complete small, self-contained projects. Practising like this has many advantages:
  <ul>
    <li>Cementing knowledge by practicing skills</li>
    <li>The satisfaction of being able to complete a section of work</li>
    <li>The ability to work within - and create - a well-defined, precise specification for the work</li>
    <li>A body of work that can be used as 'portfolio' for those without industry experience</li>
    <li>It's really fun!</li>
  </ul>
  Being able to share solutions is also incredibly valuable, allowing others to learn new techniques or approaches, learn from each other's mistakes, and understand code etiquette & conventions. This is why we promote hosting projects on GitHub, and show who is working on a project.
</p>